|zad1
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN5
HEX0[0] << _HEX_screen:hex0.port0
HEX0[1] << _HEX_screen:hex0.port0
HEX0[2] << _HEX_screen:hex0.port0
HEX0[3] << _HEX_screen:hex0.port0
HEX0[4] << _HEX_screen:hex0.port0
HEX0[5] << _HEX_screen:hex0.port0
HEX0[6] << _HEX_screen:hex0.port0
HEX1[0] << _HEX_screen:hex1.port0
HEX1[1] << _HEX_screen:hex1.port0
HEX1[2] << _HEX_screen:hex1.port0
HEX1[3] << _HEX_screen:hex1.port0
HEX1[4] << _HEX_screen:hex1.port0
HEX1[5] << _HEX_screen:hex1.port0
HEX1[6] << _HEX_screen:hex1.port0
HEX2[0] << _HEX_screen:hex2.port0
HEX2[1] << _HEX_screen:hex2.port0
HEX2[2] << _HEX_screen:hex2.port0
HEX2[3] << _HEX_screen:hex2.port0
HEX2[4] << _HEX_screen:hex2.port0
HEX2[5] << _HEX_screen:hex2.port0
HEX2[6] << _HEX_screen:hex2.port0
HEX3[0] << _HEX_screen:hex3.port0
HEX3[1] << _HEX_screen:hex3.port0
HEX3[2] << _HEX_screen:hex3.port0
HEX3[3] << _HEX_screen:hex3.port0
HEX3[4] << _HEX_screen:hex3.port0
HEX3[5] << _HEX_screen:hex3.port0
HEX3[6] << _HEX_screen:hex3.port0
HEX4[0] << _HEX_screen:hex4.port0
HEX4[1] << _HEX_screen:hex4.port0
HEX4[2] << _HEX_screen:hex4.port0
HEX4[3] << _HEX_screen:hex4.port0
HEX4[4] << _HEX_screen:hex4.port0
HEX4[5] << _HEX_screen:hex4.port0
HEX4[6] << _HEX_screen:hex4.port0
HEX5[0] << _HEX_screen:hex5.port0
HEX5[1] << _HEX_screen:hex5.port0
HEX5[2] << _HEX_screen:hex5.port0
HEX5[3] << _HEX_screen:hex5.port0
HEX5[4] << _HEX_screen:hex5.port0
HEX5[5] << _HEX_screen:hex5.port0
HEX5[6] << _HEX_screen:hex5.port0
KEY[0] => key1[0].DATAIN
KEY[1] => key1[1].DATAIN
KEY[2] => key1[2].DATAIN
KEY[3] => key1[3].DATAIN
LEDR[0] << mem_out[0].DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << mem_out[1].DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] << mem_out[2].DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] << mem_out[3].DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] << mem_out[4].DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] << mem_out[5].DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] << mem_out[6].DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] << mem_out[7].DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] << address[8].DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] << address[9].DB_MAX_OUTPUT_PORT_TYPE
SW[0] => sw1[0].DATAIN
SW[1] => sw1[1].DATAIN
SW[2] => sw1[2].DATAIN
SW[3] => sw1[3].DATAIN
SW[4] => sw1[4].DATAIN
SW[5] => sw1[5].DATAIN
SW[6] => sw1[6].DATAIN
SW[7] => sw1[7].DATAIN
SW[8] => sw1[8].DATAIN
SW[9] => sw1[9].DATAIN


|zad1|_edge_detector:det0
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad1|_edge_detector:det1
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad1|_edge_detector:det2
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad1|_edge_detector:det3
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad1|_HEX_screen:hex0
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad1|_HEX_screen:hex1
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad1|_HEX_screen:hex2
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad1|_HEX_screen:hex3
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad1|_HEX_screen:hex4
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad1|_HEX_screen:hex5
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad1|_ram:RAM
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => mem.we_a.CLK
clk => mem.waddr_a[9].CLK
clk => mem.waddr_a[8].CLK
clk => mem.waddr_a[7].CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
clk => mem.CLK0
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => q.OUTPUTSELECT
we => mem.we_a.DATAIN
we => mem.WE
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => mem.WADDR
addr[0] => mem.RADDR
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => mem.WADDR1
addr[1] => mem.RADDR1
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => mem.WADDR2
addr[2] => mem.RADDR2
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => mem.WADDR3
addr[3] => mem.RADDR3
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => mem.WADDR4
addr[4] => mem.RADDR4
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => mem.WADDR5
addr[5] => mem.RADDR5
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => mem.WADDR6
addr[6] => mem.RADDR6
addr[7] => mem.waddr_a[7].DATAIN
addr[7] => mem.WADDR7
addr[7] => mem.RADDR7
addr[8] => mem.waddr_a[8].DATAIN
addr[8] => mem.WADDR8
addr[8] => mem.RADDR8
addr[9] => mem.waddr_a[9].DATAIN
addr[9] => mem.WADDR9
addr[9] => mem.RADDR9
data[0] => q.DATAB
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => q.DATAB
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => q.DATAB
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => q.DATAB
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => q.DATAB
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => q.DATAB
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => q.DATAB
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => q.DATAB
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7


