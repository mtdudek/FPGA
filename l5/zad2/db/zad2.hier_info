|zad2
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN5
HEX0[0] << _HEX_screen:s0.port0
HEX0[1] << _HEX_screen:s0.port0
HEX0[2] << _HEX_screen:s0.port0
HEX0[3] << _HEX_screen:s0.port0
HEX0[4] << _HEX_screen:s0.port0
HEX0[5] << _HEX_screen:s0.port0
HEX0[6] << _HEX_screen:s0.port0
HEX1[0] << _HEX_screen:s1.port0
HEX1[1] << _HEX_screen:s1.port0
HEX1[2] << _HEX_screen:s1.port0
HEX1[3] << _HEX_screen:s1.port0
HEX1[4] << _HEX_screen:s1.port0
HEX1[5] << _HEX_screen:s1.port0
HEX1[6] << _HEX_screen:s1.port0
HEX2[0] << _HEX_screen:s2.port0
HEX2[1] << _HEX_screen:s2.port0
HEX2[2] << _HEX_screen:s2.port0
HEX2[3] << _HEX_screen:s2.port0
HEX2[4] << _HEX_screen:s2.port0
HEX2[5] << _HEX_screen:s2.port0
HEX2[6] << _HEX_screen:s2.port0
HEX3[0] << _HEX_screen:s3.port0
HEX3[1] << _HEX_screen:s3.port0
HEX3[2] << _HEX_screen:s3.port0
HEX3[3] << _HEX_screen:s3.port0
HEX3[4] << _HEX_screen:s3.port0
HEX3[5] << _HEX_screen:s3.port0
HEX3[6] << _HEX_screen:s3.port0
HEX4[0] << _HEX_screen:s4.port0
HEX4[1] << _HEX_screen:s4.port0
HEX4[2] << _HEX_screen:s4.port0
HEX4[3] << _HEX_screen:s4.port0
HEX4[4] << _HEX_screen:s4.port0
HEX4[5] << _HEX_screen:s4.port0
HEX4[6] << _HEX_screen:s4.port0
HEX5[0] << _HEX_screen:s5.port0
HEX5[1] << _HEX_screen:s5.port0
HEX5[2] << _HEX_screen:s5.port0
HEX5[3] << _HEX_screen:s5.port0
HEX5[4] << _HEX_screen:s5.port0
HEX5[5] << _HEX_screen:s5.port0
HEX5[6] << _HEX_screen:s5.port0
KEY[0] => key0[0].DATAIN
KEY[1] => key0[1].DATAIN
KEY[2] => key0[2].DATAIN
KEY[3] => key0[3].DATAIN
LEDR[0] << single.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] << empty.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => sw0[0].DATAIN
SW[1] => sw0[1].DATAIN
SW[2] => sw0[2].DATAIN
SW[3] => sw0[3].DATAIN
SW[4] => sw0[4].DATAIN
SW[5] => sw0[5].DATAIN
SW[6] => sw0[6].DATAIN
SW[7] => sw0[7].DATAIN
SW[8] => sw0[8].DATAIN
SW[9] => sw0[9].DATAIN


|zad2|_edge_detector:det0
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad2|_edge_detector:det1
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad2|_edge_detector:det2
was_edge <= was_edge~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => lstate.CLK
clk => was_edge~reg0.CLK
signal => Equal0.IN2
signal => lstate.DATAIN


|zad2|stack:stack0
empty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
single <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
top[0] <= top[0].DB_MAX_OUTPUT_PORT_TYPE
top[1] <= top[1].DB_MAX_OUTPUT_PORT_TYPE
top[2] <= top[2].DB_MAX_OUTPUT_PORT_TYPE
top[3] <= top[3].DB_MAX_OUTPUT_PORT_TYPE
top[4] <= top[4].DB_MAX_OUTPUT_PORT_TYPE
top[5] <= top[5].DB_MAX_OUTPUT_PORT_TYPE
top[6] <= top[6].DB_MAX_OUTPUT_PORT_TYPE
top[7] <= top[7].DB_MAX_OUTPUT_PORT_TYPE
top[8] <= top[8].DB_MAX_OUTPUT_PORT_TYPE
top[9] <= top[9].DB_MAX_OUTPUT_PORT_TYPE
top[10] <= top[10].DB_MAX_OUTPUT_PORT_TYPE
top[11] <= top[11].DB_MAX_OUTPUT_PORT_TYPE
top[12] <= top[12].DB_MAX_OUTPUT_PORT_TYPE
top[13] <= top[13].DB_MAX_OUTPUT_PORT_TYPE
top[14] <= top[14].DB_MAX_OUTPUT_PORT_TYPE
top[15] <= top[15].DB_MAX_OUTPUT_PORT_TYPE
push => push.IN1
pop => always0.IN1
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => top.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
write => pointer.OUTPUTSELECT
data[0] => top.DATAB
data[0] => top.DATAB
data[1] => top.DATAB
data[1] => top.DATAB
data[2] => top.DATAB
data[2] => top.DATAB
data[3] => top.DATAB
data[3] => top.DATAB
data[4] => top.DATAB
data[4] => top.DATAB
data[5] => top.DATAB
data[5] => top.DATAB
data[6] => top.DATAB
data[6] => top.DATAB
data[7] => top.DATAB
data[7] => top.DATAB
data[8] => top.DATAB
data[8] => top.DATAB
data[9] => top.DATAB
data[9] => top.DATAB
data[10] => top.DATAB
data[10] => top.DATAB
data[11] => top.DATAB
data[11] => top.DATAB
data[12] => top.DATAB
data[12] => top.DATAB
data[13] => top.DATAB
data[13] => top.DATAB
data[14] => top.DATAB
data[14] => top.DATAB
data[15] => top.DATAB
data[15] => top.DATAB
clk => clk.IN1
rst => top[0]~reg0.ACLR
rst => top[1]~reg0.ACLR
rst => top[2]~reg0.ACLR
rst => top[3]~reg0.ACLR
rst => top[4]~reg0.ACLR
rst => top[5]~reg0.ACLR
rst => top[6]~reg0.ACLR
rst => top[7]~reg0.ACLR
rst => top[8]~reg0.ACLR
rst => top[9]~reg0.ACLR
rst => top[10]~reg0.ACLR
rst => top[11]~reg0.ACLR
rst => top[12]~reg0.ACLR
rst => top[13]~reg0.ACLR
rst => top[14]~reg0.ACLR
rst => top[15]~reg0.ACLR
rst => pointer[0].ACLR
rst => pointer[1].ACLR
rst => pointer[2].ACLR
rst => pointer[3].ACLR
rst => pointer[4].ACLR
rst => pointer[5].ACLR
rst => pointer[6].ACLR
rst => pointer[7].ACLR
rst => pointer[8].ACLR
rst => pointer[9].ACLR


|zad2|stack:stack0|_ram:mem
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => mem.we_a.CLK
clk => mem.waddr_a[9].CLK
clk => mem.waddr_a[8].CLK
clk => mem.waddr_a[7].CLK
clk => mem.waddr_a[6].CLK
clk => mem.waddr_a[5].CLK
clk => mem.waddr_a[4].CLK
clk => mem.waddr_a[3].CLK
clk => mem.waddr_a[2].CLK
clk => mem.waddr_a[1].CLK
clk => mem.waddr_a[0].CLK
clk => mem.data_a[15].CLK
clk => mem.data_a[14].CLK
clk => mem.data_a[13].CLK
clk => mem.data_a[12].CLK
clk => mem.data_a[11].CLK
clk => mem.data_a[10].CLK
clk => mem.data_a[9].CLK
clk => mem.data_a[8].CLK
clk => mem.data_a[7].CLK
clk => mem.data_a[6].CLK
clk => mem.data_a[5].CLK
clk => mem.data_a[4].CLK
clk => mem.data_a[3].CLK
clk => mem.data_a[2].CLK
clk => mem.data_a[1].CLK
clk => mem.data_a[0].CLK
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
clk => q[8]~reg0.CLK
clk => q[9]~reg0.CLK
clk => q[10]~reg0.CLK
clk => q[11]~reg0.CLK
clk => q[12]~reg0.CLK
clk => q[13]~reg0.CLK
clk => q[14]~reg0.CLK
clk => q[15]~reg0.CLK
clk => mem.CLK0
we => mem.we_a.DATAIN
we => mem.WE
addr[0] => Add0.IN20
addr[0] => mem.waddr_a[0].DATAIN
addr[0] => mem.WADDR
addr[1] => Add0.IN19
addr[1] => mem.waddr_a[1].DATAIN
addr[1] => mem.WADDR1
addr[2] => Add0.IN18
addr[2] => mem.waddr_a[2].DATAIN
addr[2] => mem.WADDR2
addr[3] => Add0.IN17
addr[3] => mem.waddr_a[3].DATAIN
addr[3] => mem.WADDR3
addr[4] => Add0.IN16
addr[4] => mem.waddr_a[4].DATAIN
addr[4] => mem.WADDR4
addr[5] => Add0.IN15
addr[5] => mem.waddr_a[5].DATAIN
addr[5] => mem.WADDR5
addr[6] => Add0.IN14
addr[6] => mem.waddr_a[6].DATAIN
addr[6] => mem.WADDR6
addr[7] => Add0.IN13
addr[7] => mem.waddr_a[7].DATAIN
addr[7] => mem.WADDR7
addr[8] => Add0.IN12
addr[8] => mem.waddr_a[8].DATAIN
addr[8] => mem.WADDR8
addr[9] => Add0.IN11
addr[9] => mem.waddr_a[9].DATAIN
addr[9] => mem.WADDR9
data[0] => mem.data_a[0].DATAIN
data[0] => mem.DATAIN
data[1] => mem.data_a[1].DATAIN
data[1] => mem.DATAIN1
data[2] => mem.data_a[2].DATAIN
data[2] => mem.DATAIN2
data[3] => mem.data_a[3].DATAIN
data[3] => mem.DATAIN3
data[4] => mem.data_a[4].DATAIN
data[4] => mem.DATAIN4
data[5] => mem.data_a[5].DATAIN
data[5] => mem.DATAIN5
data[6] => mem.data_a[6].DATAIN
data[6] => mem.DATAIN6
data[7] => mem.data_a[7].DATAIN
data[7] => mem.DATAIN7
data[8] => mem.data_a[8].DATAIN
data[8] => mem.DATAIN8
data[9] => mem.data_a[9].DATAIN
data[9] => mem.DATAIN9
data[10] => mem.data_a[10].DATAIN
data[10] => mem.DATAIN10
data[11] => mem.data_a[11].DATAIN
data[11] => mem.DATAIN11
data[12] => mem.data_a[12].DATAIN
data[12] => mem.DATAIN12
data[13] => mem.data_a[13].DATAIN
data[13] => mem.DATAIN13
data[14] => mem.data_a[14].DATAIN
data[14] => mem.DATAIN14
data[15] => mem.data_a[15].DATAIN
data[15] => mem.DATAIN15


|zad2|_final_state_machine:mach
pop <= pop.DB_MAX_OUTPUT_PORT_TYPE
write <= write.DB_MAX_OUTPUT_PORT_TYPE
push <= push.DB_MAX_OUTPUT_PORT_TYPE
inner[0] <= inner[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[1] <= inner[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[2] <= inner[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[3] <= inner[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[4] <= inner[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[5] <= inner[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[6] <= inner[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[7] <= inner[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[8] <= inner[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[9] <= inner[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[10] <= inner[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[11] <= inner[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[12] <= inner[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[13] <= inner[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[14] <= inner[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
inner[15] <= inner[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => inner[0]~reg0.CLK
clk => inner[1]~reg0.CLK
clk => inner[2]~reg0.CLK
clk => inner[3]~reg0.CLK
clk => inner[4]~reg0.CLK
clk => inner[5]~reg0.CLK
clk => inner[6]~reg0.CLK
clk => inner[7]~reg0.CLK
clk => inner[8]~reg0.CLK
clk => inner[9]~reg0.CLK
clk => inner[10]~reg0.CLK
clk => inner[11]~reg0.CLK
clk => inner[12]~reg0.CLK
clk => inner[13]~reg0.CLK
clk => inner[14]~reg0.CLK
clk => inner[15]~reg0.CLK
clk => _add.CLK
clk => state~5.DATAIN
rst => inner[0]~reg0.ACLR
rst => inner[1]~reg0.ACLR
rst => inner[2]~reg0.ACLR
rst => inner[3]~reg0.ACLR
rst => inner[4]~reg0.ACLR
rst => inner[5]~reg0.ACLR
rst => inner[6]~reg0.ACLR
rst => inner[7]~reg0.ACLR
rst => inner[8]~reg0.ACLR
rst => inner[9]~reg0.ACLR
rst => inner[10]~reg0.ACLR
rst => inner[11]~reg0.ACLR
rst => inner[12]~reg0.ACLR
rst => inner[13]~reg0.ACLR
rst => inner[14]~reg0.ACLR
rst => inner[15]~reg0.ACLR
rst => _add.ACLR
rst => state~7.DATAIN
stack_top[0] => Add0.IN32
stack_top[0] => Mult0.IN31
stack_top[0] => inner.DATAB
stack_top[1] => Add0.IN31
stack_top[1] => Mult0.IN30
stack_top[1] => inner.DATAB
stack_top[2] => Add0.IN30
stack_top[2] => Mult0.IN29
stack_top[2] => inner.DATAB
stack_top[3] => Add0.IN29
stack_top[3] => Mult0.IN28
stack_top[3] => inner.DATAB
stack_top[4] => Add0.IN28
stack_top[4] => Mult0.IN27
stack_top[4] => inner.DATAB
stack_top[5] => Add0.IN27
stack_top[5] => Mult0.IN26
stack_top[5] => inner.DATAB
stack_top[6] => Add0.IN26
stack_top[6] => Mult0.IN25
stack_top[6] => inner.DATAB
stack_top[7] => Add0.IN25
stack_top[7] => Mult0.IN24
stack_top[7] => inner.DATAB
stack_top[8] => Add0.IN24
stack_top[8] => Mult0.IN23
stack_top[8] => inner.DATAB
stack_top[9] => Add0.IN23
stack_top[9] => Mult0.IN22
stack_top[9] => inner.DATAB
stack_top[10] => Add0.IN22
stack_top[10] => Mult0.IN21
stack_top[10] => inner.DATAB
stack_top[11] => Add0.IN21
stack_top[11] => Mult0.IN20
stack_top[11] => inner.DATAB
stack_top[12] => Add0.IN20
stack_top[12] => Mult0.IN19
stack_top[12] => inner.DATAB
stack_top[13] => Add0.IN19
stack_top[13] => Mult0.IN18
stack_top[13] => inner.DATAB
stack_top[14] => Add0.IN18
stack_top[14] => Mult0.IN17
stack_top[14] => inner.DATAB
stack_top[15] => Add0.IN17
stack_top[15] => Mult0.IN16
stack_top[15] => inner.DATAB
sw[0] => inner.DATAB
sw[1] => inner.DATAB
sw[2] => inner.DATAB
sw[3] => inner.DATAB
sw[4] => inner.DATAB
sw[5] => inner.DATAB
sw[6] => inner.DATAB
sw[7] => inner.DATAB
sw[8] => inner.DATAB
sw[9] => inner.DATAB
sw[10] => inner.DATAB
sw[11] => inner.DATAB
sw[12] => inner.DATAB
sw[13] => inner.DATAB
sw[14] => inner.DATAB
sw[15] => inner.DATAB
add => always0.IN0
add => _add.OUTPUTSELECT
mult => always0.IN1
insert => state.OUTPUTSELECT
insert => state.OUTPUTSELECT
insert => state.OUTPUTSELECT
insert => state.OUTPUTSELECT
insert => state.OUTPUTSELECT
insert => state.OUTPUTSELECT
insert => state.OUTPUTSELECT
insert => _add.OUTPUTSELECT
single => always0.IN0
empty => always0.IN1


|zad2|_HEX_screen:s5
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad2|_HEX_screen:s4
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad2|_HEX_screen:s3
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad2|_HEX_screen:s2
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad2|_HEX_screen:s1
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


|zad2|_HEX_screen:s0
screen[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
screen[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
screen[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
screen[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
screen[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
screen[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
screen[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0


